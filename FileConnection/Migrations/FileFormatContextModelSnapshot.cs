// <auto-generated />
using System;
using FileConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileConnection.Migrations
{
    [DbContext(typeof(FileFormatContext))]
    partial class FileFormatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("FileConnection.Data", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("ID");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("FileConnection.Leaf", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DataID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastWriteTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ParentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DataID")
                        .IsUnique();

                    b.HasIndex("ParentID");

                    b.ToTable("Leafs");
                });

            modelBuilder.Entity("FileConnection.LeafParameter", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("LeafID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LeafID");

                    b.ToTable("LeafParameters");
                });

            modelBuilder.Entity("FileConnection.Node", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastWriteTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("FileConnection.NodeParameter", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("NodeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("NodeID");

                    b.ToTable("NodeParameters");
                });

            modelBuilder.Entity("FileConnection.Leaf", b =>
                {
                    b.HasOne("FileConnection.Data", null)
                        .WithOne()
                        .HasForeignKey("FileConnection.Leaf", "DataID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FileConnection.Node", "Parent")
                        .WithMany("ChildrenLeafs")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileConnection.LeafParameter", b =>
                {
                    b.HasOne("FileConnection.Leaf", null)
                        .WithMany("Parameters")
                        .HasForeignKey("LeafID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileConnection.Node", b =>
                {
                    b.HasOne("FileConnection.Node", "Parent")
                        .WithMany("ChildrenNodes")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FileConnection.NodeParameter", b =>
                {
                    b.HasOne("FileConnection.Node", null)
                        .WithMany("Parameters")
                        .HasForeignKey("NodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
